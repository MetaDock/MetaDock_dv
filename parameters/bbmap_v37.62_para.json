[
    {
        "category": "Java Parameters",
        "short": "-Xmx",
        "long": null,
        "needs_input": false,
        "description": "This will be passed to Java to set memory usage, overriding the program's automatic memory detection."
    },
    {
        "category": "Java Parameters",
        "short": "-Xmx20g will specify 20 gigs of RAM, and -Xmx800m",
        "long": null,
        "needs_input": true,
        "description": "will specify 800 megs.  The max is typically 85% of\nphysical memory.  The human genome requires around 24g,\nor 12g with the 'usemodulo' flag.  The index uses\nroughly 6 bytes per reference base."
    },
    {
        "category": "Java Parameters",
        "short": "-eoom",
        "long": null,
        "needs_input": false,
        "description": "This flag will cause the process to exit if an out-of-memory exception occurs.  Requires Java 8u92+."
    },
    {
        "category": "Java Parameters",
        "short": "-da",
        "long": null,
        "needs_input": false,
        "description": "Disable assertions. \nPlease contact Brian Bushnell at bbushnell@lbl.gov if you encounter\nany problems, or post at: http://seqanswers.com/forums/showthread.php?t=41057\n"
    },
    {
        "category": "To map without writing an index",
        "short": "in=",
        "long": "stdin",
        "needs_input": true,
        "description": "will accept reads from standard in, and out=stdout will write to"
    },
    {
        "category": "Indexing Parameters (required when building the index)",
        "short": "nodisk=",
        "long": "f",
        "needs_input": true,
        "description": "Set to true to build index in memory and write nothing to disk except output."
    },
    {
        "category": "Indexing Parameters (required when building the index)",
        "short": "ref=",
        "long": "<file>",
        "needs_input": true,
        "description": "Specify the reference sequence.  Only do this ONCE, when building the index (unless using 'nodisk')."
    },
    {
        "category": "Indexing Parameters (required when building the index)",
        "short": "build=",
        "long": "1",
        "needs_input": true,
        "description": "If multiple references are indexed in the same directory, each needs a unique numeric ID (unless using 'nodisk')."
    },
    {
        "category": "Indexing Parameters (required when building the index)",
        "short": "k=",
        "long": "13",
        "needs_input": true,
        "description": "Kmer length, range 8-15.  Longer is faster but uses more memory.  Shorter is more sensitive. If indexing and mapping are done in two steps, K should be specified each time."
    },
    {
        "category": "Indexing Parameters (required when building the index)",
        "short": "path=",
        "long": "<.>",
        "needs_input": true,
        "description": "Specify the location to write the index, if you don't want it in the current working directory."
    },
    {
        "category": "Indexing Parameters (required when building the index)",
        "short": "usemodulo=",
        "long": "f",
        "needs_input": true,
        "description": "Throw away ~80% of kmers based on remainder modulo a number (reduces RAM by 50% and sensitivity slightly). Should be enabled both when building the index AND when mapping."
    },
    {
        "category": "Indexing Parameters (required when building the index)",
        "short": "rebuild=",
        "long": "f",
        "needs_input": true,
        "description": "Force a rebuild of the index (ref= should be set)."
    },
    {
        "category": "Input Parameters",
        "short": "build=",
        "long": "1",
        "needs_input": true,
        "description": "Designate index to use.  Corresponds to the number specified when building the index."
    },
    {
        "category": "Input Parameters",
        "short": "in=",
        "long": "<file>",
        "needs_input": true,
        "description": "Primary reads input; required parameter."
    },
    {
        "category": "Input Parameters",
        "short": "in2=",
        "long": "<file>",
        "needs_input": true,
        "description": "For paired reads in two files."
    },
    {
        "category": "Input Parameters",
        "short": "interleaved=",
        "long": "auto",
        "needs_input": true,
        "description": "True forces paired/interleaved input; false forces single-ended mapping. If not specified, interleaved status will be autodetected from read names."
    },
    {
        "category": "Input Parameters",
        "short": "fastareadlen=",
        "long": "500",
        "needs_input": true,
        "description": "Break up FASTA reads longer than this.  Max is 500 for BBMap and 6000 for BBMapPacBio.  Only works for FASTA input (use 'maxlen' for FASTQ input).  The default for bbmap.sh is 500, and for mapPacBio.sh is 6000."
    },
    {
        "category": "Input Parameters",
        "short": "unpigz=",
        "long": "f",
        "needs_input": true,
        "description": "Spawn a pigz (parallel gzip) process for faster decompression than using Java. Requires pigz to be installed."
    },
    {
        "category": "Input Parameters",
        "short": "touppercase=",
        "long": "t",
        "needs_input": true,
        "description": "(tuc) Convert lowercase letters in reads to upper case (otherwise they will not match the reference)."
    },
    {
        "category": "Sampling Parameters",
        "short": "reads=",
        "long": "-1",
        "needs_input": true,
        "description": "Set to a positive number N to only process the first N reads (or pairs), then quit.  -1 means use all reads."
    },
    {
        "category": "Sampling Parameters",
        "short": "samplerate=",
        "long": "1",
        "needs_input": true,
        "description": "Set to a number from 0 to 1 to randomly select that fraction of reads for mapping. 1 uses all reads."
    },
    {
        "category": "Sampling Parameters",
        "short": "skipreads=",
        "long": "0",
        "needs_input": true,
        "description": "Set to a number N to skip the first N reads (or pairs), then map the rest."
    },
    {
        "category": "Mapping Parameters",
        "short": "fast=",
        "long": "f",
        "needs_input": true,
        "description": "This flag is a macro which sets other paramters to run faster, at reduced sensitivity.  Bad for RNA-seq."
    },
    {
        "category": "Mapping Parameters",
        "short": "slow=",
        "long": "f",
        "needs_input": true,
        "description": "This flag is a macro which sets other paramters to run slower, at greater sensitivity.  'vslow' is even slower."
    },
    {
        "category": "Mapping Parameters",
        "short": "maxindel=",
        "long": "16000",
        "needs_input": true,
        "description": "Don't look for indels longer than this. Lower is faster. Set to >=100k for RNAseq with long introns like mammals."
    },
    {
        "category": "Mapping Parameters",
        "short": "strictmaxindel=",
        "long": "f",
        "needs_input": true,
        "description": "When enabled, do not allow indels longer than 'maxindel'. By default these are not sought, but may be found anyway."
    },
    {
        "category": "Mapping Parameters",
        "short": "tipsearch=",
        "long": "100",
        "needs_input": true,
        "description": "Look this far for read-end deletions with anchors shorter than K, using brute force."
    },
    {
        "category": "Mapping Parameters",
        "short": "minid=",
        "long": "0.76",
        "needs_input": true,
        "description": "Approximate minimum alignment identity to look for. Higher is faster and less sensitive."
    },
    {
        "category": "Mapping Parameters",
        "short": "minhits=",
        "long": "1",
        "needs_input": true,
        "description": "Minimum number of seed hits required for candidate sites. Higher is faster."
    },
    {
        "category": "Mapping Parameters",
        "short": "local=",
        "long": "f",
        "needs_input": true,
        "description": "Set to true to use local, rather than global, alignments. This will soft-clip ugly ends of poor alignments."
    },
    {
        "category": "Mapping Parameters",
        "short": "perfectmode=",
        "long": "f",
        "needs_input": true,
        "description": "Allow only perfect mappings when set to true (very fast)."
    },
    {
        "category": "Mapping Parameters",
        "short": "semiperfectmode=",
        "long": "f",
        "needs_input": true,
        "description": "Allow only perfect and semiperfect (perfect except for N's in the reference) mappings."
    },
    {
        "category": "Mapping Parameters",
        "short": "threads=",
        "long": "auto",
        "needs_input": true,
        "description": "(t) Set to number of threads desired.  By default, uses all cores available."
    },
    {
        "category": "Mapping Parameters",
        "short": "ambiguous=",
        "long": "best",
        "needs_input": true,
        "description": "(ambig) Set behavior on ambiguously-mapped reads (with multiple top-scoring mapping locations). best    (use the first best site) toss    (consider unmapped) random  (select one top-scoring site randomly) all     (retain all top-scoring sites)"
    },
    {
        "category": "Mapping Parameters",
        "short": "samestrandpairs=",
        "long": "f",
        "needs_input": true,
        "description": "(ssp) Specify whether paired reads should map to the same strand or opposite strands."
    },
    {
        "category": "Mapping Parameters",
        "short": "requirecorrectstrand=",
        "long": "t",
        "needs_input": true,
        "description": "(rcs) Forbid pairing of reads without correct strand orientation.  Set to false for long-mate-pair libraries."
    },
    {
        "category": "Mapping Parameters",
        "short": "killbadpairs=",
        "long": "f",
        "needs_input": true,
        "description": "(kbp) If a read pair is mapped with an inappropriate insert size or orientation, the read with the lower mapping quality is marked unmapped."
    },
    {
        "category": "Mapping Parameters",
        "short": "pairedonly=",
        "long": "f",
        "needs_input": true,
        "description": "(po) Treat unpaired reads as unmapped.  Thus they will be sent to 'outu' but not 'outm'."
    },
    {
        "category": "Mapping Parameters",
        "short": "rcomp=",
        "long": "f",
        "needs_input": true,
        "description": "Reverse complement both reads prior to mapping (for LMP outward-facing libraries)."
    },
    {
        "category": "Mapping Parameters",
        "short": "rcompmate=",
        "long": "f",
        "needs_input": true,
        "description": "Reverse complement read2 prior to mapping."
    },
    {
        "category": "Mapping Parameters",
        "short": "pairlen=",
        "long": "32000",
        "needs_input": true,
        "description": "Set max allowed distance between paired reads. (insert size)=(pairlen)+(read1 length)+(read2 length)"
    },
    {
        "category": "Mapping Parameters",
        "short": "rescuedist=",
        "long": "1200",
        "needs_input": true,
        "description": "Don't try to rescue paired reads if avg. insert size greater than this.  Lower is faster."
    },
    {
        "category": "Mapping Parameters",
        "short": "rescuemismatches=",
        "long": "32",
        "needs_input": true,
        "description": "Maximum mismatches allowed in a rescued read.  Lower is faster."
    },
    {
        "category": "Mapping Parameters",
        "short": "averagepairdist=",
        "long": "100",
        "needs_input": true,
        "description": "(apd) Initial average distance between paired reads. Varies dynamically; does not need to be specified."
    },
    {
        "category": "Mapping Parameters",
        "short": "deterministic=",
        "long": "f",
        "needs_input": true,
        "description": "Run in deterministic mode.  In this case it is good to set averagepairdist.  BBMap is deterministic without this flag if using single-ended reads, or run singlethreaded."
    },
    {
        "category": "Mapping Parameters",
        "short": "bandwidthratio=",
        "long": "0",
        "needs_input": true,
        "description": "(bwr) If above zero, restrict alignment band to this fraction of read length.  Faster but less accurate."
    },
    {
        "category": "Mapping Parameters",
        "short": "bandwidth=",
        "long": "0",
        "needs_input": true,
        "description": "(bw) Set the bandwidth directly. fraction of read length.  Faster but less accurate."
    },
    {
        "category": "Mapping Parameters",
        "short": "usejni=",
        "long": "f",
        "needs_input": true,
        "description": "(jni) Do alignments faster, in C code.  Requires compiling the C code; details are in /jni/README.txt."
    },
    {
        "category": "Mapping Parameters",
        "short": "maxsites2=",
        "long": "800",
        "needs_input": true,
        "description": "Don't analyze (or print) more than this many alignments per read."
    },
    {
        "category": "Mapping Parameters",
        "short": "ignorefrequentkmers=",
        "long": "t",
        "needs_input": true,
        "description": "(ifk) Discard low-information kmers that occur often."
    },
    {
        "category": "Mapping Parameters",
        "short": "excludefraction=",
        "long": "0.03",
        "needs_input": true,
        "description": "(ef) Fraction of kmers to ignore.  For example, 0.03 will ignore the most common 3% of kmers."
    },
    {
        "category": "Mapping Parameters",
        "short": "greedy=",
        "long": "t",
        "needs_input": true,
        "description": "Use a greedy algorithm to discard the least-useful kmers on a per-read basis."
    },
    {
        "category": "Mapping Parameters",
        "short": "kfilter=",
        "long": "0",
        "needs_input": true,
        "description": "If positive, potential mapping sites must have at least this many consecutive exact matches."
    },
    {
        "category": "Quality and Trimming Parameters",
        "short": "qin=",
        "long": "auto",
        "needs_input": true,
        "description": "Set to 33 or 64 to specify input quality value ASCII offset. 33 is Sanger, 64 is old Solexa."
    },
    {
        "category": "Quality and Trimming Parameters",
        "short": "qout=",
        "long": "auto",
        "needs_input": true,
        "description": "Set to 33 or 64 to specify output quality value ASCII offset (only if output format is fastq)."
    },
    {
        "category": "Quality and Trimming Parameters",
        "short": "qtrim=",
        "long": "f",
        "needs_input": true,
        "description": "Quality-trim ends before mapping.  Options are: 'f' (false), 'l' (left), 'r' (right), and 'lr' (both)."
    },
    {
        "category": "Quality and Trimming Parameters",
        "short": "untrim=",
        "long": "f",
        "needs_input": true,
        "description": "Undo trimming after mapping.  Untrimmed bases will be soft-clipped in cigar strings."
    },
    {
        "category": "Quality and Trimming Parameters",
        "short": "trimq=",
        "long": "6",
        "needs_input": true,
        "description": "Trim regions with average quality below this (phred algorithm)."
    },
    {
        "category": "Quality and Trimming Parameters",
        "short": "mintrimlength=",
        "long": "60",
        "needs_input": true,
        "description": "(mintl) Don't trim reads to be shorter than this."
    },
    {
        "category": "Quality and Trimming Parameters",
        "short": "fakefastaquality=",
        "long": "-1",
        "needs_input": true,
        "description": "(ffq) Set to a positive number 1-50 to generate fake quality strings for fasta input reads."
    },
    {
        "category": "Quality and Trimming Parameters",
        "short": "ignorebadquality=",
        "long": "f",
        "needs_input": true,
        "description": "(ibq) Keep going, rather than crashing, if a read has out-of-range quality values."
    },
    {
        "category": "Quality and Trimming Parameters",
        "short": "usequality=",
        "long": "t",
        "needs_input": true,
        "description": "Use quality scores when determining which read kmers to use as seeds."
    },
    {
        "category": "Quality and Trimming Parameters",
        "short": "minaveragequality=",
        "long": "0",
        "needs_input": true,
        "description": "(maq) Do not map reads with average quality below this."
    },
    {
        "category": "Quality and Trimming Parameters",
        "short": "maqb=",
        "long": "0",
        "needs_input": true,
        "description": "If positive, calculate maq from this many initial bases."
    },
    {
        "category": "Output Parameters",
        "short": "out=",
        "long": "<file>",
        "needs_input": true,
        "description": "Write all reads to this file."
    },
    {
        "category": "Output Parameters",
        "short": "outu=",
        "long": "<file>",
        "needs_input": true,
        "description": "Write only unmapped reads to this file.  Does not include unmapped paired reads with a mapped mate."
    },
    {
        "category": "Output Parameters",
        "short": "outm=",
        "long": "<file>",
        "needs_input": true,
        "description": "Write only mapped reads to this file.  Includes unmapped paired reads with a mapped mate."
    },
    {
        "category": "Output Parameters",
        "short": "mappedonly=",
        "long": "f",
        "needs_input": true,
        "description": "If true, treats 'out' like 'outm'."
    },
    {
        "category": "Output Parameters",
        "short": "bamscript=",
        "long": "<file>",
        "needs_input": true,
        "description": "(bs) Write a shell script to <file> that will turn the sam output into a sorted, indexed bam file."
    },
    {
        "category": "Output Parameters",
        "short": "ordered=",
        "long": "f",
        "needs_input": true,
        "description": "Set to true to output reads in same order as input. Slower and uses more memory."
    },
    {
        "category": "Output Parameters",
        "short": "overwrite=",
        "long": "f",
        "needs_input": true,
        "description": "(ow) Allow process to overwrite existing files."
    },
    {
        "category": "Output Parameters",
        "short": "secondary=",
        "long": "f",
        "needs_input": true,
        "description": "Print secondary alignments."
    },
    {
        "category": "Output Parameters",
        "short": "sssr=",
        "long": "0.95",
        "needs_input": true,
        "description": "(secondarysitescoreratio) Print only secondary alignments with score of at least this fraction of primary."
    },
    {
        "category": "Output Parameters",
        "short": "ssao=",
        "long": "f",
        "needs_input": true,
        "description": "(secondarysiteasambiguousonly) Only print secondary alignments for ambiguously-mapped reads."
    },
    {
        "category": "Output Parameters",
        "short": "maxsites=",
        "long": "5",
        "needs_input": true,
        "description": "Maximum number of total alignments to print per read. Only relevant when secondary=t."
    },
    {
        "category": "Output Parameters",
        "short": "quickmatch=",
        "long": "f",
        "needs_input": true,
        "description": "Generate cigar strings more quickly."
    },
    {
        "category": "Output Parameters",
        "short": "trimreaddescriptions=",
        "long": "f",
        "needs_input": true,
        "description": "(trd) Truncate read and ref names at the first whitespace, assuming that the remainder is a comment or description."
    },
    {
        "category": "Output Parameters",
        "short": "ziplevel=",
        "long": "2",
        "needs_input": true,
        "description": "(zl) Compression level for zip or gzip output."
    },
    {
        "category": "Output Parameters",
        "short": "pigz=",
        "long": "f",
        "needs_input": true,
        "description": "Spawn a pigz (parallel gzip) process for faster compression than Java.  Requires pigz to be installed."
    },
    {
        "category": "Output Parameters",
        "short": "machineout=",
        "long": "f",
        "needs_input": true,
        "description": "Set to true to output statistics in machine-friendly 'key=value' format."
    },
    {
        "category": "Output Parameters",
        "short": "'key=",
        "long": "value'",
        "needs_input": true,
        "description": "format."
    },
    {
        "category": "Output Parameters",
        "short": "printunmappedcount=",
        "long": "f",
        "needs_input": true,
        "description": "Print the total number of unmapped reads and bases. If input is paired, the number will be of pairs for which both reads are unmapped."
    },
    {
        "category": "Output Parameters",
        "short": "showprogress=",
        "long": "0",
        "needs_input": true,
        "description": "If positive, print a '.' every X reads."
    },
    {
        "category": "Output Parameters",
        "short": "showprogress2=",
        "long": "0",
        "needs_input": true,
        "description": "If positive, print the number of seconds since the last progress update (instead of a '.')."
    },
    {
        "category": "Output Parameters",
        "short": "renamebyinsert=",
        "long": "f",
        "needs_input": true,
        "description": "Renames reads based on their mapped insert size."
    },
    {
        "category": "Post-Filtering Parameters",
        "short": "idfilter=",
        "long": "0",
        "needs_input": true,
        "description": "Independant of minid; sets exact minimum identity allowed for alignments to be printed.  Range 0 to 1."
    },
    {
        "category": "Post-Filtering Parameters",
        "short": "subfilter=",
        "long": "-1",
        "needs_input": true,
        "description": "Ban alignments with more than this many substitutions."
    },
    {
        "category": "Post-Filtering Parameters",
        "short": "insfilter=",
        "long": "-1",
        "needs_input": true,
        "description": "Ban alignments with more than this many insertions."
    },
    {
        "category": "Post-Filtering Parameters",
        "short": "delfilter=",
        "long": "-1",
        "needs_input": true,
        "description": "Ban alignments with more than this many deletions."
    },
    {
        "category": "Post-Filtering Parameters",
        "short": "indelfilter=",
        "long": "-1",
        "needs_input": true,
        "description": "Ban alignments with more than this many indels."
    },
    {
        "category": "Post-Filtering Parameters",
        "short": "editfilter=",
        "long": "-1",
        "needs_input": true,
        "description": "Ban alignments with more than this many edits."
    },
    {
        "category": "Post-Filtering Parameters",
        "short": "inslenfilter=",
        "long": "-1",
        "needs_input": true,
        "description": "Ban alignments with an insertion longer than this."
    },
    {
        "category": "Post-Filtering Parameters",
        "short": "dellenfilter=",
        "long": "-1",
        "needs_input": true,
        "description": "Ban alignments with a deletion longer than this."
    },
    {
        "category": "Post-Filtering Parameters",
        "short": "nfilter=",
        "long": "-1",
        "needs_input": true,
        "description": "Ban alignments with more than this many ns.  This includes nocall, noref, and off scaffold ends."
    },
    {
        "category": "Sam flags and settings",
        "short": "noheader=",
        "long": "f",
        "needs_input": true,
        "description": "Disable generation of header lines."
    },
    {
        "category": "Sam flags and settings",
        "short": "sam=",
        "long": "1.4",
        "needs_input": true,
        "description": "Set to 1.4 to write Sam version 1.4 cigar strings, with = and X, or 1.3 to use M."
    },
    {
        "category": "Sam flags and settings",
        "short": "saa=",
        "long": "t",
        "needs_input": true,
        "description": "(secondaryalignmentasterisks) Use asterisks instead of bases for sam secondary alignments."
    },
    {
        "category": "Sam flags and settings",
        "short": "cigar=",
        "long": "t",
        "needs_input": true,
        "description": "Set to 'f' to skip generation of cigar strings (faster)."
    },
    {
        "category": "Sam flags and settings",
        "short": "keepnames=",
        "long": "f",
        "needs_input": true,
        "description": "Keep original names of paired reads, rather than ensuring both reads have the same name."
    },
    {
        "category": "Sam flags and settings",
        "short": "intronlen=",
        "long": "999999999",
        "needs_input": true,
        "description": "Set to a lower number like 10 to change 'D' to 'N' in cigar strings for deletions of at least that length."
    },
    {
        "category": "Sam flags and settings",
        "short": "rgid=",
        "long": "null",
        "needs_input": true,
        "description": "Set readgroup ID.  All other readgroup fields can be set similarly, with the flag rgXX="
    },
    {
        "category": "Sam flags and settings",
        "short": "mdtag=",
        "long": "f",
        "needs_input": true,
        "description": "Write MD tags."
    },
    {
        "category": "Sam flags and settings",
        "short": "nhtag=",
        "long": "f",
        "needs_input": true,
        "description": "Write NH tags."
    },
    {
        "category": "Sam flags and settings",
        "short": "xmtag=",
        "long": "f",
        "needs_input": true,
        "description": "Write XM tags (may only work correctly with ambig=all)."
    },
    {
        "category": "Sam flags and settings",
        "short": "amtag=",
        "long": "f",
        "needs_input": true,
        "description": "Write AM tags."
    },
    {
        "category": "Sam flags and settings",
        "short": "nmtag=",
        "long": "f",
        "needs_input": true,
        "description": "Write NM tags."
    },
    {
        "category": "Sam flags and settings",
        "short": "xstag=",
        "long": "f",
        "needs_input": true,
        "description": "Set to 'xs=fs', 'xs=ss', or 'xs=us' to write XS tags for RNAseq using firststrand, secondstrand, or unstranded libraries.  Needed by Cufflinks. JGI mainly uses 'firststrand'."
    },
    {
        "category": "Sam flags and settings",
        "short": "stoptag=",
        "long": "f",
        "needs_input": true,
        "description": "Write a tag indicating read stop location, prefixed by YS:i:"
    },
    {
        "category": "Sam flags and settings",
        "short": "lengthtag=",
        "long": "f",
        "needs_input": true,
        "description": "Write a tag indicating (query,ref) alignment lengths, prefixed by YL:Z:"
    },
    {
        "category": "prefixed by YL:Z",
        "short": "idtag=",
        "long": "f",
        "needs_input": true,
        "description": "Write a tag indicating percent identity, prefixed by YI:f:"
    },
    {
        "category": "prefixed by YL:Z",
        "short": "inserttag=",
        "long": "f",
        "needs_input": true,
        "description": "Write a tag indicating insert size, prefixed by X8:Z:"
    },
    {
        "category": "prefixed by YL:Z",
        "short": "scoretag=",
        "long": "f",
        "needs_input": true,
        "description": "Write a tag indicating BBMap's raw score, prefixed by YR:i:"
    },
    {
        "category": "prefixed by YL:Z",
        "short": "timetag=",
        "long": "f",
        "needs_input": true,
        "description": "Write a tag indicating this read's mapping time, prefixed by X0:i:"
    },
    {
        "category": "prefixed by YL:Z",
        "short": "boundstag=",
        "long": "f",
        "needs_input": true,
        "description": "Write a tag indicating whether either read in the pair goes off the end of the reference, prefixed by XB:Z:"
    },
    {
        "category": "goes off the end of the reference, prefixed by XB:Z",
        "short": "notags=",
        "long": "f",
        "needs_input": true,
        "description": "Turn off all optional tags."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "scafstats=",
        "long": "<file>",
        "needs_input": true,
        "description": "Statistics on how many reads mapped to which scaffold."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "refstats=",
        "long": "<file>",
        "needs_input": true,
        "description": "Statistics on how many reads mapped to which reference file; only for BBSplit."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "sortscafs=",
        "long": "t",
        "needs_input": true,
        "description": "Sort scaffolds or references by read count."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "bhist=",
        "long": "<file>",
        "needs_input": true,
        "description": "Base composition histogram by position."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "qhist=",
        "long": "<file>",
        "needs_input": true,
        "description": "Quality histogram by position."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "aqhist=",
        "long": "<file>",
        "needs_input": true,
        "description": "Histogram of average read quality."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "bqhist=",
        "long": "<file>",
        "needs_input": true,
        "description": "Quality histogram designed for box plots."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "lhist=",
        "long": "<file>",
        "needs_input": true,
        "description": "Read length histogram."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "ihist=",
        "long": "<file>",
        "needs_input": true,
        "description": "Write histogram of insert sizes (for paired reads)."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "ehist=",
        "long": "<file>",
        "needs_input": true,
        "description": "Errors-per-read histogram."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "qahist=",
        "long": "<file>",
        "needs_input": true,
        "description": "Quality accuracy histogram of error rates versus quality score."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "indelhist=",
        "long": "<file>",
        "needs_input": true,
        "description": "Indel length histogram."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "mhist=",
        "long": "<file>",
        "needs_input": true,
        "description": "Histogram of match, sub, del, and ins rates by read location."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "gchist=",
        "long": "<file>",
        "needs_input": true,
        "description": "Read GC content histogram."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "gcbins=",
        "long": "100",
        "needs_input": true,
        "description": "Number gchist bins.  Set to 'auto' to use read length."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "gcpairs=",
        "long": "t",
        "needs_input": true,
        "description": "Use average GC of paired reads."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "idhist=",
        "long": "<file>",
        "needs_input": true,
        "description": "Histogram of read count versus percent identity."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "idbins=",
        "long": "100",
        "needs_input": true,
        "description": "Number idhist bins.  Set to 'auto' to use read length."
    },
    {
        "category": "Histogram and statistics output parameters",
        "short": "statsfile=",
        "long": "stderr",
        "needs_input": true,
        "description": "Mapping statistics are printed here."
    },
    {
        "category": "Coverage output parameters (these may reduce speed and use more RAM)",
        "short": "covstats=",
        "long": "<file>",
        "needs_input": true,
        "description": "Per-scaffold coverage info."
    },
    {
        "category": "Coverage output parameters (these may reduce speed and use more RAM)",
        "short": "rpkm=",
        "long": "<file>",
        "needs_input": true,
        "description": "Per-scaffold RPKM/FPKM counts."
    },
    {
        "category": "Coverage output parameters (these may reduce speed and use more RAM)",
        "short": "covhist=",
        "long": "<file>",
        "needs_input": true,
        "description": "Histogram of # occurrences of each depth level."
    },
    {
        "category": "Coverage output parameters (these may reduce speed and use more RAM)",
        "short": "basecov=",
        "long": "<file>",
        "needs_input": true,
        "description": "Coverage per base location."
    },
    {
        "category": "Coverage output parameters (these may reduce speed and use more RAM)",
        "short": "bincov=",
        "long": "<file>",
        "needs_input": true,
        "description": "Print binned coverage per location (one line per X bases)."
    },
    {
        "category": "Coverage output parameters (these may reduce speed and use more RAM)",
        "short": "covbinsize=",
        "long": "1000",
        "needs_input": true,
        "description": "Set the binsize for binned coverage output."
    },
    {
        "category": "Coverage output parameters (these may reduce speed and use more RAM)",
        "short": "nzo=",
        "long": "t",
        "needs_input": true,
        "description": "Only print scaffolds with nonzero coverage."
    },
    {
        "category": "Coverage output parameters (these may reduce speed and use more RAM)",
        "short": "twocolumn=",
        "long": "f",
        "needs_input": true,
        "description": "Change to true to print only ID and Avg_fold instead of all 6 columns to the 'out=' file."
    },
    {
        "category": "Coverage output parameters (these may reduce speed and use more RAM)",
        "short": "32bit=",
        "long": "f",
        "needs_input": true,
        "description": "Set to true if you need per-base coverage over 64k."
    },
    {
        "category": "Coverage output parameters (these may reduce speed and use more RAM)",
        "short": "strandedcov=",
        "long": "f",
        "needs_input": true,
        "description": "Track coverage for plus and minus strand independently."
    },
    {
        "category": "Coverage output parameters (these may reduce speed and use more RAM)",
        "short": "startcov=",
        "long": "f",
        "needs_input": true,
        "description": "Only track start positions of reads."
    },
    {
        "category": "Coverage output parameters (these may reduce speed and use more RAM)",
        "short": "secondarycov=",
        "long": "t",
        "needs_input": true,
        "description": "Include coverage of secondary alignments."
    },
    {
        "category": "Coverage output parameters (these may reduce speed and use more RAM)",
        "short": "physcov=",
        "long": "f",
        "needs_input": true,
        "description": "Calculate physical coverage for paired reads. This includes the unsequenced bases."
    },
    {
        "category": "Coverage output parameters (these may reduce speed and use more RAM)",
        "short": "delcoverage=",
        "long": "t",
        "needs_input": true,
        "description": "(delcov) Count bases covered by deletions as covered. True is faster than false."
    }
]