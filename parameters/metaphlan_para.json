[
    {
        "category": null,
        "short": null,
        "long": "--input_type. Two steps: first apply BowTie2 and then feed MetaPhlAn with the obtained sam:",
        "needs_input": true,
        "description": "$ bowtie2 --sam-no-hd --sam-no-sq --no-unal --very-sensitive -S metagenome.sam -x ${mpa_dir}/metaphlan_databases/mpa_v30_CHOCOPhlAn_201901 -U metagenome.fastq\n$ metaphlan metagenome.sam --input_type sam -o profiled_metagenome.txt\n\n*  We can also natively handle paired-end metagenomes, and, more generally, metagenomes stored in\nmultiple files (but you need to specify the --bowtie2out parameter):\n$ metaphlan metagenome_1.fastq,metagenome_2.fastq --bowtie2out metagenome.bowtie2.bz2 --nproc 5 --input_type fastq\n"
    },
    {
        "category": null,
        "short": null,
        "long": "-------------------------------------------------------------------",
        "needs_input": false,
        "description": "\n\n========== Marker level analysis ============================\n\nMetaPhlAn introduces the capability of characterizing organisms at the strain level using non\naggregated marker information. Such capability comes with several slightly different flavours and\nare a way to perform strain tracking and comparison across multiple samples.\nUsually, MetaPhlAn is first ran with the default -t to profile the species present in\nthe community, and then a strain-level profiling can be performed to zoom-in into specific species\nof interest. This operation can be performed quickly as it exploits the --bowtie2out intermediate\nfile saved during the execution of the default analysis type.\n\n*  The following command will output the abundance of each marker with a RPK (reads per kilo-base)\nhigher 0.0. (we are assuming that metagenome_outfmt.bz2 has been generated before as\nshown above).\n$ metaphlan -t marker_ab_table metagenome_outfmt.bz2 --input_type bowtie2out -o marker_abundance_table.txt\nThe obtained RPK can be optionally normalized by the total number of reads in the metagenome\nto guarantee fair comparisons of abundances across samples. The number of reads in the metagenome\nneeds to be passed with the '--nreads' argument\n\n*  The list of markers present in the sample can be obtained with '-t marker_pres_table'\n$ metaphlan -t marker_pres_table metagenome_outfmt.bz2 --input_type bowtie2out -o marker_abundance_table.txt\nThe --pres_th argument (default 1.0) set the minimum RPK value to consider a marker present\n\n*  The list '-t clade_profiles' analysis type reports the same information of '-t marker_ab_table'\nbut the markers are reported on a clade-by-clade basis.\n$ metaphlan -t clade_profiles metagenome_outfmt.bz2 --input_type bowtie2out -o marker_abundance_table.txt\n\n*  Finally, to obtain all markers present for a specific clade and all its subclades, the\n'-t clade_specific_strain_tracker' should be used. For example, the following command\nis reporting the presence/absence of the markers for the B. fragilis species and its strains\nthe optional argument --min_ab specifies the minimum clade abundance for reporting the markers\n\n$ metaphlan -t clade_specific_strain_tracker --clade s__Bacteroides_fragilis metagenome_outfmt.bz2 --input_type bowtie2out -o marker_abundance_table.txt\n"
    },
    {
        "category": null,
        "short": null,
        "long": "-------------------------------------------------------------------",
        "needs_input": false,
        "description": "\npositional arguments:\nINPUT_FILE            the input file can be:\n* a fastq file containing metagenomic reads\nOR\n* a BowTie2 produced SAM file.\nOR\n* an intermediary mapping file of the metagenome generated by a previous MetaPhlAn run\nIf the input file is missing, the script assumes that the input is provided using the standard\ninput, or named pipes.\nIMPORTANT: the type of input needs to be specified with --input_type\nOUTPUT_FILE           the tab-separated output file of the predicted taxon relative abundances\n[stdout if not present]\n"
    },
    {
        "category": "Required arguments",
        "short": null,
        "long": "--input_type {fastq,fasta,bowtie2out,sam}",
        "needs_input": true,
        "description": "set whether the input is the FASTA file of metagenomic reads or\nthe SAM file of the mapping of the reads against the MetaPhlAn db.\n"
    },
    {
        "category": "Mapping arguments",
        "short": null,
        "long": "--force",
        "needs_input": false,
        "description": "Force profiling of the input file by removing the bowtie2out file"
    },
    {
        "category": "Mapping arguments",
        "short": null,
        "long": "--bowtie2db METAPHLAN_BOWTIE2_DB",
        "needs_input": true,
        "description": "Folder containing the MetaPhlAn database. You can specify the location by exporting the DEFAULT_DB_FOLDER variable in the shell.[default /home/hoshigawarei/miniconda3/envs/mpa/lib/python3.7/site-packages/metaphlan/metaphlan_databases]"
    },
    {
        "category": "Mapping arguments",
        "short": "-x INDEX",
        "long": "--index INDEX",
        "needs_input": true,
        "description": "Specify the id of the database version to use. If \"latest\", MetaPhlAn will get the latest version.\nIf an index name is provided, MetaPhlAn will try to use it, if available, and skip the online check.\nIf the database files are not found on the local MetaPhlAn installation they\nwill be automatically downloaded [default latest]"
    },
    {
        "category": "Mapping arguments",
        "short": null,
        "long": "--bt2_ps BowTie2 presets",
        "needs_input": true,
        "description": "Presets options for BowTie2 (applied only when a FASTA file is provided)\nThe choices enabled in MetaPhlAn are:\n* sensitive\n* very-sensitive\n* sensitive-local\n* very-sensitive-local\n[default very-sensitive]"
    },
    {
        "category": "Mapping arguments",
        "short": null,
        "long": "--bowtie2_exe BOWTIE2_EXE",
        "needs_input": true,
        "description": "Full path and name of the BowTie2 executable. This option allowsMetaPhlAn to reach the executable even when it is not in the system PATH or the system PATH is unreachable"
    },
    {
        "category": "Mapping arguments",
        "short": null,
        "long": "--bowtie2_build BOWTIE2_BUILD",
        "needs_input": true,
        "description": "Full path to the bowtie2-build command to use, deafult assumes that 'bowtie2-build is present in the system path"
    },
    {
        "category": "Mapping arguments",
        "short": null,
        "long": "--bowtie2out FILE_NAME",
        "needs_input": true,
        "description": "The file for saving the output of BowTie2"
    },
    {
        "category": "Mapping arguments",
        "short": null,
        "long": "--min_mapq_val MIN_MAPQ_VAL",
        "needs_input": true,
        "description": "Minimum mapping quality value (MAPQ) [default 5]"
    },
    {
        "category": "Mapping arguments",
        "short": null,
        "long": "--no_map",
        "needs_input": false,
        "description": "Avoid storing the --bowtie2out map file"
    },
    {
        "category": "Mapping arguments",
        "short": null,
        "long": "--tmp_dir",
        "needs_input": false,
        "description": "The folder used to store temporary files [default is the OS dependent tmp dir]"
    },
    {
        "category": "Post-mapping arguments",
        "short": null,
        "long": "--tax_lev TAXONOMIC_LEVEL",
        "needs_input": true,
        "description": "The taxonomic level for the relative abundance output:\n'a' : all taxonomic levels\n'k' : kingdoms\n'p' : phyla only\n'c' : classes only\n'o' : orders only\n'f' : families only\n'g' : genera only\n's' : species only\n't' : SGBs only\n[default 'a']"
    },
    {
        "category": "Post-mapping arguments",
        "short": null,
        "long": "--min_cu_len",
        "needs_input": false,
        "description": "minimum total nucleotide length for the markers in a clade for estimating the abundance without considering sub-clade abundances\n[default 2000]"
    },
    {
        "category": "Post-mapping arguments",
        "short": null,
        "long": "--min_alignment_len",
        "needs_input": false,
        "description": "The sam records for aligned reads with the longest subalignment length smaller than this threshold will be discarded.\n[default None]"
    },
    {
        "category": "Post-mapping arguments",
        "short": null,
        "long": "--add_viruses",
        "needs_input": false,
        "description": "Together with --mpa3, allow the profiling of viral organisms"
    },
    {
        "category": "Post-mapping arguments",
        "short": null,
        "long": "--ignore_eukaryotes",
        "needs_input": false,
        "description": "Do not profile eukaryotic organisms"
    },
    {
        "category": "Post-mapping arguments",
        "short": null,
        "long": "--ignore_bacteria",
        "needs_input": false,
        "description": "Do not profile bacterial organisms"
    },
    {
        "category": "Post-mapping arguments",
        "short": null,
        "long": "--ignore_archaea",
        "needs_input": false,
        "description": "Do not profile archeal organisms"
    },
    {
        "category": "Post-mapping arguments",
        "short": null,
        "long": "--ignore_ksgbs",
        "needs_input": false,
        "description": "Do not profile known SGBs (together with --sgb option)"
    },
    {
        "category": "Post-mapping arguments",
        "short": null,
        "long": "--ignore_usgbs",
        "needs_input": false,
        "description": "Do not profile unknown SGBs (together with --sgb option)"
    },
    {
        "category": "Post-mapping arguments",
        "short": null,
        "long": "--stat_q",
        "needs_input": false,
        "description": "Quantile value for the robust average [default 0.2]"
    },
    {
        "category": "Post-mapping arguments",
        "short": null,
        "long": "--perc_nonzero",
        "needs_input": false,
        "description": "Percentage of markers with a non zero relative abundance for misidentify a species [default 0.33]"
    },
    {
        "category": "Post-mapping arguments",
        "short": null,
        "long": "--ignore_markers IGNORE_MARKERS",
        "needs_input": true,
        "description": "File containing a list of markers to ignore."
    },
    {
        "category": "Post-mapping arguments",
        "short": null,
        "long": "--avoid_disqm",
        "needs_input": false,
        "description": "Deactivate the procedure of disambiguating the quasi-markers based on the marker abundance pattern found in the sample. It is generally recommended\nto keep the disambiguation procedure in order to minimize false positives"
    },
    {
        "category": "Post-mapping arguments",
        "short": null,
        "long": "--stat",
        "needs_input": false,
        "description": "Statistical approach for converting marker abundances into clade abundances 'avg_g'  : clade global (i.e. normalizing all markers together) average\n'avg_l'  : average of length-normalized marker counts\n'tavg_g' : truncated clade global average at --stat_q quantile\n'tavg_l' : truncated average of length-normalized marker counts (at --stat_q)\n'wavg_g' : winsorized clade global average (at --stat_q)\n'wavg_l' : winsorized average of length-normalized marker counts (at --stat_q)\n'med'    : median of length-normalized marker counts\n[default tavg_g]\n"
    },
    {
        "category": "Additional analysis types and arguments",
        "short": "-t ANALYSIS TYPE",
        "long": null,
        "needs_input": true,
        "description": "Type of analysis to perform: * rel_ab: profiling a metagenomes in terms of relative abundances\n* rel_ab_w_read_stats: profiling a metagenomes in terms of relative abundances and estimate the number of reads coming from each clade.\n* reads_map: mapping from reads to clades (only reads hitting a marker)\n* clade_profiles: normalized marker counts for clades with at least a non-null marker\n* marker_ab_table: normalized marker counts (only when > 0.0 and normalized by metagenome size if --nreads is specified)\n* marker_counts: non-normalized marker counts [use with extreme caution]\n* marker_pres_table: list of markers present in the sample (threshold at 1.0 if not differently specified with --pres_th\n* clade_specific_strain_tracker: list of markers present for a specific clade, specified with --clade, and all its subclades\n[default 'rel_ab']"
    },
    {
        "category": "Additional analysis types and arguments",
        "short": null,
        "long": "--nreads NUMBER_OF_READS",
        "needs_input": true,
        "description": "The total number of reads in the original metagenome. It is mandatory when the --input_type is a SAM file."
    },
    {
        "category": "Additional analysis types and arguments",
        "short": null,
        "long": "--pres_th PRESENCE_THRESHOLD",
        "needs_input": true,
        "description": "Threshold for calling a marker present by the -t marker_pres_table option"
    },
    {
        "category": "Additional analysis types and arguments",
        "short": null,
        "long": "--clade",
        "needs_input": false,
        "description": "The clade for clade_specific_strain_tracker analysis"
    },
    {
        "category": "Additional analysis types and arguments",
        "short": null,
        "long": "--min_ab",
        "needs_input": false,
        "description": "The minimum percentage abundance for the clade in the clade_specific_strain_tracker analysis"
    },
    {
        "category": "Output arguments",
        "short": "-o output file",
        "long": "--output_file output file",
        "needs_input": true,
        "description": "The output file (if not specified as positional argument)"
    },
    {
        "category": "Output arguments",
        "short": null,
        "long": "--sample_id_key name",
        "needs_input": true,
        "description": "Specify the sample ID key for this analysis. Defaults to 'SampleID'."
    },
    {
        "category": "Output arguments",
        "short": null,
        "long": "--use_group_representative",
        "needs_input": false,
        "description": "Use a species as representative for species groups."
    },
    {
        "category": "Output arguments",
        "short": null,
        "long": "--sample_id value",
        "needs_input": true,
        "description": "Specify the sample ID for this analysis. Defaults to 'Metaphlan_Analysis'."
    },
    {
        "category": "Output arguments",
        "short": "-s sam_output_file",
        "long": "--samout sam_output_file",
        "needs_input": true,
        "description": "The sam output file"
    },
    {
        "category": "Output arguments",
        "short": null,
        "long": "--legacy-output",
        "needs_input": false,
        "description": "Old MetaPhlAn2 two columns output"
    },
    {
        "category": "Output arguments",
        "short": null,
        "long": "--CAMI_format_output",
        "needs_input": false,
        "description": "Report the profiling using the CAMI output format"
    },
    {
        "category": "Output arguments",
        "short": null,
        "long": "--unclassified_estimation",
        "needs_input": false,
        "description": "Scale relative abundances to the number of reads mapping to identified clades in order to estimate unclassified taxa"
    },
    {
        "category": "Output arguments",
        "short": null,
        "long": "--mpa3",
        "needs_input": false,
        "description": "Perform the analysis using the MetaPhlAn 3 algorithm"
    },
    {
        "category": "Output arguments",
        "short": null,
        "long": "--biom_output_file biom_output",
        "needs_input": true,
        "description": "If requesting biom file output: The name of the output file in biom format"
    },
    {
        "category": "Output arguments",
        "short": null,
        "long": "--metadata_delimiter_char mdelim",
        "needs_input": true,
        "description": "Delimiter for bug metadata: - defaults to pipe. e.g. the pipe in k__Bacteria|p__Proteobacteria\n"
    },
    {
        "category": "Other arguments",
        "short": null,
        "long": "--nproc N",
        "needs_input": true,
        "description": "The number of CPUs to use for parallelizing the mapping [default 4]"
    },
    {
        "category": "Other arguments",
        "short": null,
        "long": "--subsampling SUBSAMPLING",
        "needs_input": true,
        "description": "Specify the number of reads to be considered from the input metagenomes [default None]"
    },
    {
        "category": "Other arguments",
        "short": null,
        "long": "--subsampling_seed SUBSAMPLING_SEED",
        "needs_input": true,
        "description": "Random seed to use in the selection of the subsampled reads. Choose \"random\nfor a random behaviour"
    },
    {
        "category": "Other arguments",
        "short": null,
        "long": "--install",
        "needs_input": false,
        "description": "Only checks if the MetaPhlAn DB is installed and installs it if not. All other parameters are ignored."
    },
    {
        "category": "Other arguments",
        "short": null,
        "long": "--offline",
        "needs_input": false,
        "description": "If used, MetaPhlAn will not check for new database updates."
    },
    {
        "category": "Other arguments",
        "short": null,
        "long": "--force_download",
        "needs_input": false,
        "description": "Force the re-download of the latest MetaPhlAn database."
    },
    {
        "category": "Other arguments",
        "short": null,
        "long": "--read_min_len READ_MIN_LEN",
        "needs_input": true,
        "description": "Specify the minimum length of the reads to be considered when parsing the input file with 'read_fastx.py' script, default value is 70"
    },
    {
        "category": "Other arguments",
        "short": "-v",
        "long": "--version",
        "needs_input": false,
        "description": "Prints the current MetaPhlAn version and exit"
    },
    {
        "category": "Other arguments",
        "short": "-h",
        "long": "--help",
        "needs_input": false,
        "description": "show this help message and exit"
    },
    {
        "category": "MetaPhlAn version 4.0.6 (1 Mar 2023)",
        "short": "==========",
        "long": "null",
        "needs_input": true,
        "description": "MetaPhlAn clade-abundance estimation ================="
    },
    {
        "category": "multiple files (but you need to specify the --bowtie2out parameter)",
        "short": "==========",
        "long": "null",
        "needs_input": true,
        "description": "Marker level analysis ============================"
    }
]