<%- include('../../public/views/partials/header', { title: title }) %>
<%- include('../../public/views/partials/navbar', { isAdmin: true, connectionDetails: connectionDetails }) %>

<main class="container mx-auto p-6 space-y-8">
  <div class="card bg-base-200 shadow-xl">
    <div class="card-body">
      <h2 class="card-title text-2xl mb-4">
        <i class="ti ti-edit mr-2"></i>
        Edit <%= toolName %>
      </h2>

      <!-- Tool Configuration -->
      <div class="form-control space-y-4">
        <div>
          <label class="label">
            <span class="label-text">Title</span>
          </label>
          <input 
            type="text" 
            id="toolTitle" 
            class="input input-bordered w-full" 
            value="<%= tool.title %>"
          >
        </div>

        <div>
          <label class="label">
            <span class="label-text">Environment Variables</span>
          </label>
          <textarea 
            id="toolEnv" 
            class="textarea textarea-bordered w-full h-32"
            placeholder="Enter environment variables (one per line)"
          ><%= tool.env ? tool.env.join('\n') : '' %></textarea>
        </div>

        <div class="form-control">
          <label class="label cursor-pointer">
            <span class="label-text">Show stderr output</span>
            <input 
              type="checkbox" 
              id="toolHasStderr" 
              class="checkbox checkbox-primary"
              <%= tool.hasStderr ? 'checked' : '' %>
            >
          </label>
        </div>
      </div>

      <!-- Parameters -->
      <div class="mt-8">
        <h3 class="text-xl font-bold mb-4">Parameters</h3>
        
        <!-- Usage Section -->
        <div class="mb-8">
          <h4 class="text-lg font-semibold mb-2">Usage</h4>
          <div id="usageSections" class="space-y-4">
            <% usageData.forEach((section, index) => { %>
              <div class="card bg-base-100 shadow-sm" data-section-id="<%= section.id %>">
                <div class="card-body">
                  <div class="flex justify-between items-start">
                    <div class="flex-1">
                      <div class="form-control">
                        <label class="label">
                          <span class="label-text">Description</span>
                        </label>
                        <textarea 
                          class="textarea textarea-bordered"
                          name="description"
                        ><%= section.description %></textarea>
                      </div>
                    </div>
                    <button 
                      class="btn btn-sm btn-error ml-2"
                      onclick="deleteSection('<%= section.id %>', 'usage')"
                    >
                      <i class="ti ti-trash"></i>
                    </button>
                  </div>
                </div>
              </div>
            <% }); %>
          </div>
          <button 
            class="btn btn-primary btn-sm mt-2"
            onclick="addSection('usage')"
          >
            <i class="ti ti-plus mr-1"></i>
            Add Usage Section
          </button>
        </div>

        <!-- Parameter Sections -->
        <div>
          <h4 class="text-lg font-semibold mb-2">Parameters</h4>
          <div id="parameterSections" class="space-y-4">
            <% paraData.forEach((section, index) => { %>
              <div class="card bg-base-100 shadow-sm" data-section-id="<%= section.id %>">
                <div class="card-body">
                  <div class="flex justify-between items-start">
                    <div class="flex-1 space-y-4">
                      <div class="form-control">
                        <label class="label">
                          <span class="label-text">Category</span>
                        </label>
                        <input 
                          type="text" 
                          class="input input-bordered"
                          name="category"
                          value="<%= section.category %>"
                        >
                      </div>
                      
                      <div class="grid grid-cols-2 gap-4">
                        <div class="form-control">
                          <label class="label">
                            <span class="label-text">Short Option</span>
                          </label>
                          <input 
                            type="text" 
                            class="input input-bordered"
                            name="short"
                            value="<%= section.short || '' %>"
                          >
                        </div>
                        
                        <div class="form-control">
                          <label class="label">
                            <span class="label-text">Long Option</span>
                          </label>
                          <input 
                            type="text" 
                            class="input input-bordered"
                            name="long"
                            value="<%= section.long || '' %>"
                          >
                        </div>
                      </div>
                      
                      <div class="form-control">
                        <label class="label cursor-pointer">
                          <span class="label-text">Needs Input</span>
                          <input 
                            type="checkbox" 
                            class="checkbox checkbox-primary"
                            name="needs_input"
                            <%= section.needs_input ? 'checked' : '' %>
                          >
                        </label>
                      </div>
                      
                      <div class="form-control">
                        <label class="label">
                          <span class="label-text">Description</span>
                        </label>
                        <textarea 
                          class="textarea textarea-bordered"
                          name="description"
                        ><%= section.description %></textarea>
                      </div>
                    </div>
                    <button 
                      class="btn btn-sm btn-error ml-2"
                      onclick="deleteSection('<%= section.id %>', 'parameter')"
                    >
                      <i class="ti ti-trash"></i>
                    </button>
                  </div>
                </div>
              </div>
            <% }); %>
          </div>
          <button 
            class="btn btn-primary btn-sm mt-2"
            onclick="addSection('parameter')"
          >
            <i class="ti ti-plus mr-1"></i>
            Add Parameter Section
          </button>
        </div>
      </div>

      <!-- Save Button -->
      <div class="mt-8 flex justify-end">
        <button 
          class="btn btn-primary"
          onclick="saveChanges()"
        >
          <i class="ti ti-device-floppy mr-2"></i>
          Save Changes
        </button>
      </div>
    </div>
  </div>
</main>

<%- include('../../public/views/partials/footer') %>

<script>
  // Add new section
  function addSection(type) {
    const container = document.getElementById(`${type}Sections`);
    const sectionId = `new_${Date.now()}`;
    
    const section = document.createElement('div');
    section.className = 'card bg-base-100 shadow-sm';
    section.dataset.sectionId = sectionId;
    
    if (type === 'usage') {
      section.innerHTML = `
        <div class="card-body">
          <div class="flex justify-between items-start">
            <div class="flex-1">
              <div class="form-control">
                <label class="label">
                  <span class="label-text">Description</span>
                </label>
                <textarea 
                  class="textarea textarea-bordered"
                  name="description"
                ></textarea>
              </div>
            </div>
            <button 
              class="btn btn-sm btn-error ml-2"
              onclick="deleteSection('${sectionId}', 'usage')"
            >
              <i class="ti ti-trash"></i>
            </button>
          </div>
        </div>
      `;
    } else {
      section.innerHTML = `
        <div class="card-body">
          <div class="flex justify-between items-start">
            <div class="flex-1 space-y-4">
              <div class="form-control">
                <label class="label">
                  <span class="label-text">Category</span>
                </label>
                <input 
                  type="text" 
                  class="input input-bordered"
                  name="category"
                  value=""
                >
              </div>
              
              <div class="grid grid-cols-2 gap-4">
                <div class="form-control">
                  <label class="label">
                    <span class="label-text">Short Option</span>
                  </label>
                  <input 
                    type="text" 
                    class="input input-bordered"
                    name="short"
                    value=""
                  >
                </div>
                
                <div class="form-control">
                  <label class="label">
                    <span class="label-text">Long Option</span>
                  </label>
                  <input 
                    type="text" 
                    class="input input-bordered"
                    name="long"
                    value=""
                  >
                </div>
              </div>
              
              <div class="form-control">
                <label class="label cursor-pointer">
                  <span class="label-text">Needs Input</span>
                  <input 
                    type="checkbox" 
                    class="checkbox checkbox-primary"
                    name="needs_input"
                  >
                </label>
              </div>
              
              <div class="form-control">
                <label class="label">
                  <span class="label-text">Description</span>
                </label>
                <textarea 
                  class="textarea textarea-bordered"
                  name="description"
                ></textarea>
              </div>
            </div>
            <button 
              class="btn btn-sm btn-error ml-2"
              onclick="deleteSection('${sectionId}', 'parameter')"
            >
              <i class="ti ti-trash"></i>
            </button>
          </div>
        </div>
      `;
    }
    
    container.appendChild(section);
  }

  // Delete section
  function deleteSection(sectionId, type) {
    if (!confirm('Are you sure you want to delete this section?')) {
      return;
    }
    
    const section = document.querySelector(`[data-section-id="${sectionId}"]`);
    if (section) {
      section.remove();
    }
  }

  // Save changes
  async function saveChanges() {
    const toolName = '<%= toolName %>';
    const toolData = {
      title: document.getElementById('toolTitle').value,
      env: document.getElementById('toolEnv').value.split('\n').filter(line => line.trim()),
      hasStderr: document.getElementById('toolHasStderr').checked
    };

    // Collect usage sections
    const usageSections = Array.from(document.getElementById('usageSections').children).map(section => {
      const description = section.querySelector('[name="description"]').value;
      return {
        id: section.dataset.sectionId,
        description
      };
    });

    // Collect parameter sections
    const parameterSections = Array.from(document.getElementById('parameterSections').children).map(section => {
      return {
        id: section.dataset.sectionId,
        category: section.querySelector('[name="category"]').value,
        short: section.querySelector('[name="short"]').value,
        long: section.querySelector('[name="long"]').value,
        needs_input: section.querySelector('[name="needs_input"]').checked,
        description: section.querySelector('[name="description"]').value
      };
    });

    try {
      // Update tool configuration
      const toolResponse = await fetch(`/admin/tools/${toolName}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(toolData)
      });

      if (!toolResponse.ok) {
        throw new Error('Failed to update tool configuration');
      }

      // Update usage sections
      for (const section of usageSections) {
        if (section.id.startsWith('new_')) {
          // Add new section
          await fetch(`/admin/tools/${toolName}/parameters`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              ...section,
              category: 'usage'
            })
          });
        } else {
          // Update existing section
          await fetch(`/admin/tools/${toolName}/parameters/${section.id}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(section)
          });
        }
      }

      // Update parameter sections
      for (const section of parameterSections) {
        if (section.id.startsWith('new_')) {
          // Add new section
          await fetch(`/admin/tools/${toolName}/parameters`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(section)
          });
        } else {
          // Update existing section
          await fetch(`/admin/tools/${toolName}/parameters/${section.id}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(section)
          });
        }
      }

      showToast('Changes saved successfully');
      setTimeout(() => window.location.href = '/admin/tool_management', 1000);
    } catch (error) {
      console.error('Error saving changes:', error);
      showToast('Failed to save changes: ' + error.message, 'error');
    }
  }

  // Toast notification
  function showToast(message, type = 'success') {
    const toast = document.createElement('div');
    toast.className = `toast toast-${type} fixed bottom-4 right-4`;
    toast.innerHTML = message;
    document.body.appendChild(toast);
    
    setTimeout(() => {
      toast.remove();
    }, 3000);
  }
</script> 